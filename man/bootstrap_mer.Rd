% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrapMer.R
\name{bootstrap_mer}
\alias{bootstrap_mer}
\title{Run Various Bootstrap for Mixed Models.}
\usage{
bootstrap_mer(x, FUN, nsim = 1, seed = NULL, type = c("parametric",
  "residual", "residual_cgr", "residual_trans", "case"), lv1_resample = FALSE,
  .progress = FALSE, verbose = FALSE)
}
\arguments{
\item{x}{A fitted merMod object from lmer.}

\item{FUN}{A function taking a fitted merMod object as input and returning
the statistic of interest, which must be a (possibly named) numeric vector.}

\item{nsim}{Number of simulations, positive integer; the bootstrap B (or R).}

\item{seed}{Optional argument to set.seed.}

\item{type}{A character string indicating the type of multilevel bootstrap.
Currently, possible values are "parametric", "residual", "residual_cgr",
"residual_trans", or "case".}

\item{lv1_resample}{Logical indicating whether to sample with replacement
the level-1 units for each level-2 cluster. Only used for
\code{type = "case"}. Default is \code{FALSE}.}

\item{.progress}{Logical indicating whether to display progressbar (using
\code{\link[utils]{txtProgressBar}}).}

\item{verbose}{Logical indicating if progress should print output}
}
\value{
An object of S3 class "boot", compatible with \pkg{boot} package's
  \code{\link[boot]{boot}()}. It contains the following components:

  \item{t0}{The original statistic from \code{FUN(x)}.}
  \item{t}{A matrix with \code{nsim} rows containing the bootstrap
           distribution of the statistic.}
  \item{R}{The value of \code{nsim} passed to the function.}
  \item{data}{The data used in the original analysis.}
}
\description{
Run multilevel parametric, residual, and case bootstrap with different
  options
}
\details{
\code{bootstrap_mer} performs different bootstrapping methods to fitted
model objects using the lme4 package. Currently, only models fitted
using \code{\link[lme4]{lmer}} is supported.
}
\examples{
library(lme4)
fm01ML <- lmer(Yield ~ (1 | Batch), Dyestuff, REML = FALSE)
mySumm <- function(x) {
  c(getME(x, "beta"), sigma(x))
}
# Covariance preserving residual bootstrap
boo01 <- bootstrap_mer(fm01ML, mySumm, type = "residual", nsim = 100)
# Plot bootstrap distribution of fixed effect
library(boot)
plot(boo01, index = 1)
# Get confidence interval
library(boot)
boot.ci(boo01, index = 2, type = c("norm", "basic", "perc"))
# BCa using influence values computed from `empinf_`
boot.ci(boo01, index = 2, type = "bca", L = empinf_mer(fm01ML, mySumm, 2))
}
\seealso{
\code{\link[boot]{boot}} for single-level bootstrapping,
  \code{\link[lme4]{bootMer}} for parametric and semi-parametric bootstrap
  implemented in lme4, and \code{\link[boot]{boot.ci}} for getting
  bootstrap confidence intervals.
}
