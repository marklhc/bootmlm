% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrapMer.R
\name{bootstrapMer}
\alias{bootstrapMer}
\title{Run Various Bootstrap for Mixed Models.}
\usage{
bootstrapMer(x, FUN, nsim = 1, seed = NULL, type = c("resid", "resid_cgr",
  "resid_trans"), verbose = FALSE)
}
\arguments{
\item{x}{A fitted merMod object from lmer.}

\item{FUN}{A function taking a fitted merMod object as input and returning
the statistic of interest, which must be a (possibly named) numeric vector.}

\item{nsim}{Number of simulations, positive integer; the bootstrap B (or R).}

\item{seed}{Optional argument to set.seed.}

\item{type}{A character string indicating the type of multilevel bootstrap.
Possible values are "resid", "resid_cgr", or "resid_trans".}

\item{verbose}{Logical indicating if progress should print output}
}
\value{
An object of S3 class "boot", compatible with boot package's boot()
  result. It contains the following components:

  \item{t0}{The original statistic from \code{FUN(x)}.}
  \item{t}{A matrix with \code{nsim} rows containing the bootstrap
           distribution of the statistic.}
  \item{R}{The value of \code{nsim} passed to the function.}
  \item{data}{The data used in the original analysis.}
}
\description{
Run multilevel bootstrap with three options
}
\details{
\code{bootstrapMer} performs different bootstrapping methods to fitted
model objects using the lme4 package. Currently, only models with fitted
using \code{\link[lme4]{lmer}} is supported.
}
\examples{
library(lme4)
fm01ML <- lmer(Yield ~ (1 | Batch), Dyestuff, REML = FALSE)
# mathematically correct residual bootstrap
mySumm <- function(x) {
  c(getME(x, "beta"), sigma(x))
}
bootstrapMer(fm01ML, mySumm, type = "resid_trans", nsim = 100)
}
\seealso{
\code{\link[boot]{boot}} for single-level bootstrapping,
  \code{\link[lme4]{bootMer}} for parametric and semi-parametric bootstrap
  implemented in lme4, and \code{\link[boot]{boot.ci}} for getting
  bootstrap confidence intervals.
}
