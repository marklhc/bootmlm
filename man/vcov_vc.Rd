% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcov_vc.R
\name{vcov_vc}
\alias{vcov_vc}
\title{Asymptotic Covariance Matrix for Random Effects}
\usage{
vcov_vc(x, sd_cor = TRUE, print_names = TRUE)
}
\arguments{
\item{x}{A fitted merMod object from \code{\link[lme4]{lmer}}.}

\item{sd_cor}{Logical indicating whether to return asymptotic covariance
matrix on SD scale (if \code{TRUE}) or on variance scale
(if \code{FALSE}).}

\item{print_names}{Logical, whether to print the names for the covariance
matrix.}
}
\value{
A (q + 1) * (q + 1) symmetric matrix of the covariance
  matrix of (\eqn{\tau, \sigma}) (if \code{sd_cor = TRUE}) or
  (\eqn{\tau^2, \sigma^2}) (if \code{sd_cor = FALSE}), where q is the
  the number of estimated random-effects components (excluding \eqn{\sigma}).
  For example, for a model with random slope, \eqn{\tau} =
  (intercept SD, intercept-slope correlation, slope SD).
}
\description{
Return the asymptotic covariance matrix of random effect standard
deviations (or variances) for a fitted model object, using the Hessian
evaluated at the (restricted) maximum likelihood estimates.
}
\details{
Although it's easy to obtain the Hessian for \eqn{\theta}, the relative
Cholesky factor, in \pkg{lme4}, there is no easy way to obtain the Hessian
for the variance components. This function uses \code{\link{devfun_mer}()} to
obtain the Hessian (\eqn{H}) of variance components (or standard deviations,
SD), and then obtain the asymptotic covariance matrix as \eqn{-2 H^{-1}}.
}
\examples{
library(lme4)
data(Orthodont, package = "nlme")
fm1 <- lmer(distance ~ age + (age | Subject), data = Orthodont)
vc <- VarCorr(fm1)
# Standard deviation only
print(vc, comp = c("Std.Dev"))
# Asymptotic variance-covariance matrix of (tau, sigma):
vcov_vc(fm1, sd_cor = TRUE)
# Compare with (parametric) bootstrap results :
get_sdcor <- function(x) {
  as.data.frame(lme4::VarCorr(x), order = "lower.tri")[ , "sdcor"]
}
boo <- bootstrap_mer(fm1, get_sdcor, type = "parametric", nsim = 200L)
# There might be failures in some resamples
cov(boo$t, use = "complete.obs")
}
